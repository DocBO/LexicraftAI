{"ast":null,"code":"var _jsxFileName = \"/Users/euclidstellar/Desktop/gun_quill/ai-writing-assistant/src/components/ManuscriptManager.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { geminiService } from '../services/geminiAPI';\n\n// const ManuscriptManager = () => {\n//   const [chapters, setChapters] = useState([]);\n//   const [currentChapter, setCurrentChapter] = useState({ title: '', content: '', wordCount: 0 });\n//   const [analysis, setAnalysis] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState('');\n//   const [editingChapter, setEditingChapter] = useState(null);\n\n//   useEffect(() => {\n//     const savedChapters = localStorage.getItem('manuscript_chapters');\n//     if (savedChapters) {\n//       setChapters(JSON.parse(savedChapters));\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     localStorage.setItem('manuscript_chapters', JSON.stringify(chapters));\n//   }, [chapters]);\n\n//   const addChapter = () => {\n//     if (!currentChapter.title.trim() || !currentChapter.content.trim()) return;\n\n//     const newChapter = {\n//       id: Date.now(),\n//       title: currentChapter.title,\n//       content: currentChapter.content,\n//       wordCount: currentChapter.content.split(' ').filter(w => w).length,\n//       createdAt: new Date().toLocaleDateString(),\n//       status: 'draft'\n//     };\n\n//     setChapters(prev => [...prev, newChapter]);\n//     setCurrentChapter({ title: '', content: '', wordCount: 0 });\n//   };\n\n//   const updateChapter = (id, updatedChapter) => {\n//     setChapters(prev => prev.map(chapter => \n//       chapter.id === id \n//         ? { ...chapter, ...updatedChapter, wordCount: updatedChapter.content.split(' ').filter(w => w).length }\n//         : chapter\n//     ));\n//     setEditingChapter(null);\n//   };\n\n//   const deleteChapter = (id) => {\n//     setChapters(prev => prev.filter(chapter => chapter.id !== id));\n//   };\n\n//   const analyzeManuscript = async () => {\n//     if (chapters.length === 0) return;\n\n//     setLoading(true);\n//     setError('');\n\n//     try {\n//       const chapterData = chapters.map(ch => ({\n//         title: ch.title,\n//         wordCount: ch.wordCount,\n//         content: ch.content.substring(0, 500) // First 500 chars for analysis\n//       }));\n\n//       const response = await geminiService.analyzeManuscript(chapterData);\n//       if (response.success) {\n//         setAnalysis(response.analysis);\n//       }\n//     } catch (error) {\n//       setError('Failed to analyze manuscript: ' + error.message);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleContentChange = (content) => {\n//     setCurrentChapter(prev => ({\n//       ...prev,\n//       content,\n//       wordCount: content.split(' ').filter(w => w).length\n//     }));\n//   };\n\n//   const totalWordCount = chapters.reduce((total, chapter) => total + chapter.wordCount, 0);\n//   const averageChapterLength = chapters.length > 0 ? Math.round(totalWordCount / chapters.length) : 0;\n\n//   return (\n//     <div className=\"component manuscript-manager\">\n//       <h2>📖 Manuscript Manager</h2>\n\n//       <div className=\"manuscript-stats\">\n//         <div className=\"stat-card\">\n//           <h3>{chapters.length}</h3>\n//           <p>Chapters</p>\n//         </div>\n//         <div className=\"stat-card\">\n//           <h3>{totalWordCount.toLocaleString()}</h3>\n//           <p>Total Words</p>\n//         </div>\n//         <div className=\"stat-card\">\n//           <h3>{averageChapterLength}</h3>\n//           <p>Avg. Chapter Length</p>\n//         </div>\n//         <div className=\"stat-card\">\n//           <h3>{Math.round(totalWordCount / 250)}</h3>\n//           <p>Estimated Pages</p>\n//         </div>\n//       </div>\n\n//       <div className=\"chapter-input-section\">\n//         <h3>Add New Chapter</h3>\n//         <input\n//           type=\"text\"\n//           value={currentChapter.title}\n//           onChange={(e) => setCurrentChapter(prev => ({ ...prev, title: e.target.value }))}\n//           placeholder=\"Chapter title...\"\n//           className=\"chapter-title-input\"\n//         />\n\n//         <textarea\n//           value={currentChapter.content}\n//           onChange={(e) => handleContentChange(e.target.value)}\n//           placeholder=\"Write your chapter content here...\"\n//           className=\"chapter-content-input\"\n//           style={{ height: '300px' }}\n//         />\n\n//         <div className=\"chapter-input-footer\">\n//           <span className=\"word-count\">{currentChapter.wordCount} words</span>\n//           <button \n//             onClick={addChapter}\n//             disabled={!currentChapter.title.trim() || !currentChapter.content.trim()}\n//             className=\"button\"\n//           >\n//             Add Chapter\n//           </button>\n//         </div>\n//       </div>\n\n//       <div className=\"chapters-list\">\n//         <div className=\"chapters-header\">\n//           <h3>Chapters ({chapters.length})</h3>\n//           <button \n//             onClick={analyzeManuscript}\n//             disabled={loading || chapters.length === 0}\n//             className=\"button secondary\"\n//           >\n//             {loading ? 'Analyzing...' : 'Analyze Manuscript'}\n//           </button>\n//         </div>\n\n//         {chapters.map((chapter, index) => (\n//           <div key={chapter.id} className=\"chapter-item\">\n//             {editingChapter === chapter.id ? (\n//               <ChapterEditor \n//                 chapter={chapter}\n//                 onSave={(updated) => updateChapter(chapter.id, updated)}\n//                 onCancel={() => setEditingChapter(null)}\n//               />\n//             ) : (\n//               <ChapterDisplay\n//                 chapter={chapter}\n//                 index={index}\n//                 onEdit={() => setEditingChapter(chapter.id)}\n//                 onDelete={() => deleteChapter(chapter.id)}\n//               />\n//             )}\n//           </div>\n//         ))}\n//       </div>\n\n//       {error && <div className=\"error-message\">{error}</div>}\n\n//       {analysis && (\n//         <div className=\"manuscript-analysis\">\n//           <h3>Manuscript Analysis</h3>\n\n//           <div className=\"analysis-overview\">\n//             <div className=\"progress-circle\">\n//               <span className=\"progress-number\">{analysis.overallProgress}%</span>\n//               <span className=\"progress-label\">Overall Progress</span>\n//             </div>\n\n//             <div className=\"readability-score\">\n//               <span className=\"score-number\">{analysis.readabilityScore}</span>\n//               <span className=\"score-label\">Readability Score</span>\n//             </div>\n//           </div>\n\n//           <div className=\"analysis-details\">\n//             <div className=\"analysis-section\">\n//               <h4>Pacing Analysis</h4>\n//               <p>{analysis.paceAnalysis}</p>\n//             </div>\n\n//             {analysis.consistencyIssues.length > 0 && (\n//               <div className=\"analysis-section\">\n//                 <h4>Consistency Issues</h4>\n//                 <ul>\n//                   {analysis.consistencyIssues.map((issue, index) => (\n//                     <li key={index} className=\"issue-item\">{issue}</li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             )}\n\n//             <div className=\"analysis-section\">\n//               <h4>Suggestions</h4>\n//               <ul>\n//                 {analysis.suggestions.map((suggestion, index) => (\n//                   <li key={index} className=\"suggestion-item\">{suggestion}</li>\n//                 ))}\n//               </ul>\n//             </div>\n\n//             {analysis.chapterInsights.length > 0 && (\n//               <div className=\"chapter-insights\">\n//                 <h4>Chapter Insights</h4>\n//                 {analysis.chapterInsights.map((insight, index) => (\n//                   <div key={index} className=\"insight-card\">\n//                     <h5>Chapter {insight.chapterNumber}</h5>\n//                     <div className=\"insight-details\">\n//                       <div className=\"strengths\">\n//                         <strong>Strengths:</strong>\n//                         <ul>\n//                           {insight.strengths.map((strength, idx) => (\n//                             <li key={idx}>{strength}</li>\n//                           ))}\n//                         </ul>\n//                       </div>\n//                       <div className=\"improvements\">\n//                         <strong>Improvements:</strong>\n//                         <ul>\n//                           {insight.improvements.map((improvement, idx) => (\n//                             <li key={idx}>{improvement}</li>\n//                           ))}\n//                         </ul>\n//                       </div>\n//                       <div className=\"pace-rating\">\n//                         <strong>Pace:</strong> {insight.paceRating}\n//                       </div>\n//                     </div>\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// const ChapterDisplay = ({ chapter, index, onEdit, onDelete }) => (\n//   <div className=\"chapter-display\">\n//     <div className=\"chapter-header\">\n//       <h4>Chapter {index + 1}: {chapter.title}</h4>\n//       <div className=\"chapter-actions\">\n//         <button onClick={onEdit} className=\"edit-btn\">Edit</button>\n//         <button onClick={onDelete} className=\"delete-btn\">Delete</button>\n//       </div>\n//     </div>\n\n//     <div className=\"chapter-meta\">\n//       <span className=\"word-count\">{chapter.wordCount} words</span>\n//       <span className=\"created-date\">{chapter.createdAt}</span>\n//       <span className={`status ${chapter.status}`}>{chapter.status}</span>\n//     </div>\n\n//     <div className=\"chapter-preview\">\n//       {chapter.content.substring(0, 200)}...\n//     </div>\n//   </div>\n// );\n\n// const ChapterEditor = ({ chapter, onSave, onCancel }) => {\n//   const [title, setTitle] = useState(chapter.title);\n//   const [content, setContent] = useState(chapter.content);\n//   const [status, setStatus] = useState(chapter.status);\n\n//   const handleSave = () => {\n//     onSave({ title, content, status });\n//   };\n\n//   return (\n//     <div className=\"chapter-editor\">\n//       <input\n//         type=\"text\"\n//         value={title}\n//         onChange={(e) => setTitle(e.target.value)}\n//         className=\"chapter-title-input\"\n//       />\n\n//       <select \n//         value={status} \n//         onChange={(e) => setStatus(e.target.value)}\n//         className=\"status-select\"\n//       >\n//         <option value=\"draft\">Draft</option>\n//         <option value=\"review\">In Review</option>\n//         <option value=\"final\">Final</option>\n//       </select>\n\n//       <textarea\n//         value={content}\n//         onChange={(e) => setContent(e.target.value)}\n//         className=\"chapter-content-input\"\n//         style={{ height: '200px' }}\n//       />\n\n//       <div className=\"editor-actions\">\n//         <button onClick={handleSave} className=\"button\">Save</button>\n//         <button onClick={onCancel} className=\"button secondary\">Cancel</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ManuscriptManager;\n\nimport React, { useState, useEffect } from 'react';\nimport { geminiService } from '../services/geminiAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManuscriptManager = () => {\n  _s();\n  const [chapters, setChapters] = useState([]);\n  const [activeChapter, setActiveChapter] = useState(null);\n  const [manuscriptTitle, setManuscriptTitle] = useState('Untitled Manuscript');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Load manuscript data from localStorage on component mount\n  useEffect(() => {\n    const savedManuscript = localStorage.getItem('manuscript_data');\n    if (savedManuscript) {\n      const data = JSON.parse(savedManuscript);\n      setChapters(data.chapters || []);\n      setManuscriptTitle(data.title || 'Untitled Manuscript');\n      if (data.chapters.length > 0) {\n        setActiveChapter(data.chapters[0]);\n      }\n    }\n  }, []);\n\n  // Save manuscript data to localStorage whenever it changes\n  useEffect(() => {\n    const manuscriptData = {\n      title: manuscriptTitle,\n      chapters: chapters,\n      lastModified: new Date().toISOString()\n    };\n    localStorage.setItem('manuscript_data', JSON.stringify(manuscriptData));\n  }, [chapters, manuscriptTitle]);\n  const addNewChapter = () => {\n    const newChapter = {\n      id: Date.now(),\n      title: `Chapter ${chapters.length + 1}`,\n      content: '',\n      wordCount: 0,\n      progress: 0,\n      notes: '',\n      createdAt: new Date().toISOString(),\n      lastModified: new Date().toISOString()\n    };\n    setChapters([...chapters, newChapter]);\n    setActiveChapter(newChapter);\n  };\n  const updateChapter = (chapterId, updates) => {\n    const updatedChapters = chapters.map(chapter => {\n      if (chapter.id === chapterId) {\n        const wordCount = updates.content ? updates.content.split(' ').filter(w => w).length : chapter.wordCount;\n        return {\n          ...chapter,\n          ...updates,\n          wordCount,\n          lastModified: new Date().toISOString()\n        };\n      }\n      return chapter;\n    });\n    setChapters(updatedChapters);\n    if (activeChapter && activeChapter.id === chapterId) {\n      setActiveChapter({\n        ...activeChapter,\n        ...updates\n      });\n    }\n  };\n  const deleteChapter = chapterId => {\n    if (window.confirm('Are you sure you want to delete this chapter?')) {\n      const updatedChapters = chapters.filter(chapter => chapter.id !== chapterId);\n      setChapters(updatedChapters);\n      if (activeChapter && activeChapter.id === chapterId) {\n        setActiveChapter(updatedChapters.length > 0 ? updatedChapters[0] : null);\n      }\n    }\n  };\n  const exportManuscript = () => {\n    const fullText = chapters.map(chapter => `${chapter.title}\\n\\n${chapter.content}`).join('\\n\\n---\\n\\n');\n    const blob = new Blob([fullText], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${manuscriptTitle.replace(/[^a-z0-9]/gi, '_').toLowerCase()}.txt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  const analyzeChapter = async chapterId => {\n    const chapter = chapters.find(c => c.id === chapterId);\n    if (!chapter || !chapter.content.trim()) return;\n    setLoading(true);\n    setError('');\n    try {\n      const response = await geminiService.analyzeChapter(chapter.content);\n      if (response.success) {\n        updateChapter(chapterId, {\n          analysis: response.analysis,\n          suggestions: response.suggestions\n        });\n      }\n    } catch (error) {\n      setError('Failed to analyze chapter: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getTotalStats = () => {\n    const totalWords = chapters.reduce((sum, chapter) => sum + chapter.wordCount, 0);\n    const avgProgress = chapters.length > 0 ? chapters.reduce((sum, chapter) => sum + chapter.progress, 0) / chapters.length : 0;\n    return {\n      totalWords,\n      totalChapters: chapters.length,\n      avgProgress: Math.round(avgProgress),\n      lastModified: chapters.length > 0 ? new Date(Math.max(...chapters.map(c => new Date(c.lastModified)))).toLocaleDateString() : 'Never'\n    };\n  };\n  const stats = getTotalStats();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component manuscript-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manuscript-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manuscript-title-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: manuscriptTitle,\n          onChange: e => setManuscriptTitle(e.target.value),\n          className: \"manuscript-title-input\",\n          placeholder: \"Enter manuscript title...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"manuscript-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportManuscript,\n            className: \"button secondary small\",\n            children: \"\\uD83D\\uDCE5 Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addNewChapter,\n            className: \"button small\",\n            children: \"\\u2795 New Chapter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manuscript-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-number\",\n            children: stats.totalWords\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Total Words\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-number\",\n            children: stats.totalChapters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Chapters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-number\",\n            children: [stats.avgProgress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Avg Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-number\",\n            children: stats.lastModified\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Last Modified\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manuscript-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chapters-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCDA Chapters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chapters-list\",\n          children: chapters.map(chapter => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `chapter-item ${(activeChapter === null || activeChapter === void 0 ? void 0 : activeChapter.id) === chapter.id ? 'active' : ''}`,\n            onClick: () => setActiveChapter(chapter),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chapter-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"chapter-title\",\n                children: chapter.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chapter-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    analyzeChapter(chapter.id);\n                  },\n                  className: \"analyze-btn\",\n                  disabled: loading,\n                  title: \"Analyze Chapter\",\n                  children: \"\\uD83D\\uDD0D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    deleteChapter(chapter.id);\n                  },\n                  className: \"delete-btn\",\n                  title: \"Delete Chapter\",\n                  children: \"\\uD83D\\uDDD1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chapter-meta\",\n              children: [chapter.wordCount, \" words \\u2022 \", chapter.progress, \"% complete\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-indicator\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: `${chapter.progress}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this)]\n          }, chapter.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-area\",\n        children: activeChapter ? /*#__PURE__*/_jsxDEV(ChapterEditor, {\n          chapter: activeChapter,\n          onUpdate: updateChapter,\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-chapter-selected\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83D\\uDCDD No Chapter Selected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Select a chapter from the sidebar or create a new one to start writing.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addNewChapter,\n              className: \"button\",\n              children: \"\\u2795 Create First Chapter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 459,\n    columnNumber: 5\n  }, this);\n};\n_s(ManuscriptManager, \"b2gXGRfaKJjHKI9RchltgtB9x3E=\");\n_c = ManuscriptManager;\nconst ChapterEditor = ({\n  chapter,\n  onUpdate,\n  loading\n}) => {\n  _s2();\n  const [content, setContent] = useState(chapter.content);\n  const [title, setTitle] = useState(chapter.title);\n  const [progress, setProgress] = useState(chapter.progress);\n  const [notes, setNotes] = useState(chapter.notes || '');\n  const [showAnalysis, setShowAnalysis] = useState(false);\n  useEffect(() => {\n    setContent(chapter.content);\n    setTitle(chapter.title);\n    setProgress(chapter.progress);\n    setNotes(chapter.notes || '');\n  }, [chapter]);\n  const handleContentChange = e => {\n    const newContent = e.target.value;\n    setContent(newContent);\n    onUpdate(chapter.id, {\n      content: newContent\n    });\n  };\n  const handleTitleChange = e => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n    onUpdate(chapter.id, {\n      title: newTitle\n    });\n  };\n  const handleProgressChange = e => {\n    const newProgress = parseInt(e.target.value);\n    setProgress(newProgress);\n    onUpdate(chapter.id, {\n      progress: newProgress\n    });\n  };\n  const handleNotesChange = e => {\n    const newNotes = e.target.value;\n    setNotes(newNotes);\n    onUpdate(chapter.id, {\n      notes: newNotes\n    });\n  };\n  const wordCount = content.split(' ').filter(w => w).length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chapter-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chapter-editor-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: handleTitleChange,\n          className: \"chapter-title-input\",\n          placeholder: \"Chapter Title...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chapter-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"word-count\",\n            children: [wordCount, \" words\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Progress: \", progress, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"0\",\n              max: \"100\",\n              value: progress,\n              onChange: handleProgressChange,\n              className: \"progress-slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAnalysis(!showAnalysis),\n          className: `toggle-btn ${showAnalysis ? 'active' : ''}`,\n          children: showAnalysis ? '📝 Editor' : '📊 Analysis'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 7\n    }, this), !showAnalysis ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: handleContentChange,\n        placeholder: \"Start writing your chapter here... \\uD83D\\uDCA1 Writing Tips:\\n\\u2022 Set a daily word count goal\\n\\u2022 Write consistently, even if it's just 100 words\\n\\u2022 Don't edit while writing your first draft\\n\\u2022 Use the progress slider to track completion\\n\\u2022 Add notes below for plot points or character development\",\n        className: \"chapter-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notes-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uD83D\\uDCDD Chapter Notes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: notes,\n          onChange: handleNotesChange,\n          placeholder: \"Add notes about plot points, character development, or things to remember...\",\n          className: \"notes-textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-content\",\n      children: chapter.analysis ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chapter-analysis\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDCCA Chapter Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"analysis-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Pacing:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 19\n            }, this), \" \", chapter.analysis.pacing]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"analysis-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 19\n            }, this), \" \", chapter.analysis.tone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"analysis-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Conflict Level:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 19\n            }, this), \" \", chapter.analysis.conflictLevel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"analysis-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Character Development:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 19\n            }, this), \" \", chapter.analysis.characterDevelopment]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 15\n        }, this), chapter.suggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uD83D\\uDCA1 Suggestions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: chapter.suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: suggestion\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-analysis\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No analysis available. Click the analyze button (\\uD83D\\uDD0D) in the chapter list to get AI insights.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 619,\n    columnNumber: 5\n  }, this);\n};\n_s2(ChapterEditor, \"oVpNDDNOFse5rkwqPb23dIiK/SI=\");\n_c2 = ChapterEditor;\nexport default ManuscriptManager;\nvar _c, _c2;\n$RefreshReg$(_c, \"ManuscriptManager\");\n$RefreshReg$(_c2, \"ChapterEditor\");","map":{"version":3,"names":["React","useState","useEffect","geminiService","jsxDEV","_jsxDEV","ManuscriptManager","_s","chapters","setChapters","activeChapter","setActiveChapter","manuscriptTitle","setManuscriptTitle","loading","setLoading","error","setError","savedManuscript","localStorage","getItem","data","JSON","parse","title","length","manuscriptData","lastModified","Date","toISOString","setItem","stringify","addNewChapter","newChapter","id","now","content","wordCount","progress","notes","createdAt","updateChapter","chapterId","updates","updatedChapters","map","chapter","split","filter","w","deleteChapter","window","confirm","exportManuscript","fullText","join","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","replace","toLowerCase","body","appendChild","click","removeChild","revokeObjectURL","analyzeChapter","find","c","trim","response","success","analysis","suggestions","message","getTotalStats","totalWords","reduce","sum","avgProgress","totalChapters","Math","round","max","toLocaleDateString","stats","className","children","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","stopPropagation","disabled","style","width","ChapterEditor","onUpdate","_c","_s2","setContent","setTitle","setProgress","setNotes","showAnalysis","setShowAnalysis","handleContentChange","newContent","handleTitleChange","newTitle","handleProgressChange","newProgress","parseInt","handleNotesChange","newNotes","min","pacing","tone","conflictLevel","characterDevelopment","suggestion","index","_c2","$RefreshReg$"],"sources":["/Users/euclidstellar/Desktop/gun_quill/ai-writing-assistant/src/components/ManuscriptManager.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { geminiService } from '../services/geminiAPI';\n\n// const ManuscriptManager = () => {\n//   const [chapters, setChapters] = useState([]);\n//   const [currentChapter, setCurrentChapter] = useState({ title: '', content: '', wordCount: 0 });\n//   const [analysis, setAnalysis] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState('');\n//   const [editingChapter, setEditingChapter] = useState(null);\n\n//   useEffect(() => {\n//     const savedChapters = localStorage.getItem('manuscript_chapters');\n//     if (savedChapters) {\n//       setChapters(JSON.parse(savedChapters));\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     localStorage.setItem('manuscript_chapters', JSON.stringify(chapters));\n//   }, [chapters]);\n\n//   const addChapter = () => {\n//     if (!currentChapter.title.trim() || !currentChapter.content.trim()) return;\n\n//     const newChapter = {\n//       id: Date.now(),\n//       title: currentChapter.title,\n//       content: currentChapter.content,\n//       wordCount: currentChapter.content.split(' ').filter(w => w).length,\n//       createdAt: new Date().toLocaleDateString(),\n//       status: 'draft'\n//     };\n\n//     setChapters(prev => [...prev, newChapter]);\n//     setCurrentChapter({ title: '', content: '', wordCount: 0 });\n//   };\n\n//   const updateChapter = (id, updatedChapter) => {\n//     setChapters(prev => prev.map(chapter => \n//       chapter.id === id \n//         ? { ...chapter, ...updatedChapter, wordCount: updatedChapter.content.split(' ').filter(w => w).length }\n//         : chapter\n//     ));\n//     setEditingChapter(null);\n//   };\n\n//   const deleteChapter = (id) => {\n//     setChapters(prev => prev.filter(chapter => chapter.id !== id));\n//   };\n\n//   const analyzeManuscript = async () => {\n//     if (chapters.length === 0) return;\n\n//     setLoading(true);\n//     setError('');\n\n//     try {\n//       const chapterData = chapters.map(ch => ({\n//         title: ch.title,\n//         wordCount: ch.wordCount,\n//         content: ch.content.substring(0, 500) // First 500 chars for analysis\n//       }));\n\n//       const response = await geminiService.analyzeManuscript(chapterData);\n//       if (response.success) {\n//         setAnalysis(response.analysis);\n//       }\n//     } catch (error) {\n//       setError('Failed to analyze manuscript: ' + error.message);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleContentChange = (content) => {\n//     setCurrentChapter(prev => ({\n//       ...prev,\n//       content,\n//       wordCount: content.split(' ').filter(w => w).length\n//     }));\n//   };\n\n//   const totalWordCount = chapters.reduce((total, chapter) => total + chapter.wordCount, 0);\n//   const averageChapterLength = chapters.length > 0 ? Math.round(totalWordCount / chapters.length) : 0;\n\n//   return (\n//     <div className=\"component manuscript-manager\">\n//       <h2>📖 Manuscript Manager</h2>\n      \n//       <div className=\"manuscript-stats\">\n//         <div className=\"stat-card\">\n//           <h3>{chapters.length}</h3>\n//           <p>Chapters</p>\n//         </div>\n//         <div className=\"stat-card\">\n//           <h3>{totalWordCount.toLocaleString()}</h3>\n//           <p>Total Words</p>\n//         </div>\n//         <div className=\"stat-card\">\n//           <h3>{averageChapterLength}</h3>\n//           <p>Avg. Chapter Length</p>\n//         </div>\n//         <div className=\"stat-card\">\n//           <h3>{Math.round(totalWordCount / 250)}</h3>\n//           <p>Estimated Pages</p>\n//         </div>\n//       </div>\n\n//       <div className=\"chapter-input-section\">\n//         <h3>Add New Chapter</h3>\n//         <input\n//           type=\"text\"\n//           value={currentChapter.title}\n//           onChange={(e) => setCurrentChapter(prev => ({ ...prev, title: e.target.value }))}\n//           placeholder=\"Chapter title...\"\n//           className=\"chapter-title-input\"\n//         />\n        \n//         <textarea\n//           value={currentChapter.content}\n//           onChange={(e) => handleContentChange(e.target.value)}\n//           placeholder=\"Write your chapter content here...\"\n//           className=\"chapter-content-input\"\n//           style={{ height: '300px' }}\n//         />\n        \n//         <div className=\"chapter-input-footer\">\n//           <span className=\"word-count\">{currentChapter.wordCount} words</span>\n//           <button \n//             onClick={addChapter}\n//             disabled={!currentChapter.title.trim() || !currentChapter.content.trim()}\n//             className=\"button\"\n//           >\n//             Add Chapter\n//           </button>\n//         </div>\n//       </div>\n\n//       <div className=\"chapters-list\">\n//         <div className=\"chapters-header\">\n//           <h3>Chapters ({chapters.length})</h3>\n//           <button \n//             onClick={analyzeManuscript}\n//             disabled={loading || chapters.length === 0}\n//             className=\"button secondary\"\n//           >\n//             {loading ? 'Analyzing...' : 'Analyze Manuscript'}\n//           </button>\n//         </div>\n\n//         {chapters.map((chapter, index) => (\n//           <div key={chapter.id} className=\"chapter-item\">\n//             {editingChapter === chapter.id ? (\n//               <ChapterEditor \n//                 chapter={chapter}\n//                 onSave={(updated) => updateChapter(chapter.id, updated)}\n//                 onCancel={() => setEditingChapter(null)}\n//               />\n//             ) : (\n//               <ChapterDisplay\n//                 chapter={chapter}\n//                 index={index}\n//                 onEdit={() => setEditingChapter(chapter.id)}\n//                 onDelete={() => deleteChapter(chapter.id)}\n//               />\n//             )}\n//           </div>\n//         ))}\n//       </div>\n\n//       {error && <div className=\"error-message\">{error}</div>}\n\n//       {analysis && (\n//         <div className=\"manuscript-analysis\">\n//           <h3>Manuscript Analysis</h3>\n          \n//           <div className=\"analysis-overview\">\n//             <div className=\"progress-circle\">\n//               <span className=\"progress-number\">{analysis.overallProgress}%</span>\n//               <span className=\"progress-label\">Overall Progress</span>\n//             </div>\n            \n//             <div className=\"readability-score\">\n//               <span className=\"score-number\">{analysis.readabilityScore}</span>\n//               <span className=\"score-label\">Readability Score</span>\n//             </div>\n//           </div>\n\n//           <div className=\"analysis-details\">\n//             <div className=\"analysis-section\">\n//               <h4>Pacing Analysis</h4>\n//               <p>{analysis.paceAnalysis}</p>\n//             </div>\n\n//             {analysis.consistencyIssues.length > 0 && (\n//               <div className=\"analysis-section\">\n//                 <h4>Consistency Issues</h4>\n//                 <ul>\n//                   {analysis.consistencyIssues.map((issue, index) => (\n//                     <li key={index} className=\"issue-item\">{issue}</li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             )}\n\n//             <div className=\"analysis-section\">\n//               <h4>Suggestions</h4>\n//               <ul>\n//                 {analysis.suggestions.map((suggestion, index) => (\n//                   <li key={index} className=\"suggestion-item\">{suggestion}</li>\n//                 ))}\n//               </ul>\n//             </div>\n\n//             {analysis.chapterInsights.length > 0 && (\n//               <div className=\"chapter-insights\">\n//                 <h4>Chapter Insights</h4>\n//                 {analysis.chapterInsights.map((insight, index) => (\n//                   <div key={index} className=\"insight-card\">\n//                     <h5>Chapter {insight.chapterNumber}</h5>\n//                     <div className=\"insight-details\">\n//                       <div className=\"strengths\">\n//                         <strong>Strengths:</strong>\n//                         <ul>\n//                           {insight.strengths.map((strength, idx) => (\n//                             <li key={idx}>{strength}</li>\n//                           ))}\n//                         </ul>\n//                       </div>\n//                       <div className=\"improvements\">\n//                         <strong>Improvements:</strong>\n//                         <ul>\n//                           {insight.improvements.map((improvement, idx) => (\n//                             <li key={idx}>{improvement}</li>\n//                           ))}\n//                         </ul>\n//                       </div>\n//                       <div className=\"pace-rating\">\n//                         <strong>Pace:</strong> {insight.paceRating}\n//                       </div>\n//                     </div>\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// const ChapterDisplay = ({ chapter, index, onEdit, onDelete }) => (\n//   <div className=\"chapter-display\">\n//     <div className=\"chapter-header\">\n//       <h4>Chapter {index + 1}: {chapter.title}</h4>\n//       <div className=\"chapter-actions\">\n//         <button onClick={onEdit} className=\"edit-btn\">Edit</button>\n//         <button onClick={onDelete} className=\"delete-btn\">Delete</button>\n//       </div>\n//     </div>\n    \n//     <div className=\"chapter-meta\">\n//       <span className=\"word-count\">{chapter.wordCount} words</span>\n//       <span className=\"created-date\">{chapter.createdAt}</span>\n//       <span className={`status ${chapter.status}`}>{chapter.status}</span>\n//     </div>\n    \n//     <div className=\"chapter-preview\">\n//       {chapter.content.substring(0, 200)}...\n//     </div>\n//   </div>\n// );\n\n// const ChapterEditor = ({ chapter, onSave, onCancel }) => {\n//   const [title, setTitle] = useState(chapter.title);\n//   const [content, setContent] = useState(chapter.content);\n//   const [status, setStatus] = useState(chapter.status);\n\n//   const handleSave = () => {\n//     onSave({ title, content, status });\n//   };\n\n//   return (\n//     <div className=\"chapter-editor\">\n//       <input\n//         type=\"text\"\n//         value={title}\n//         onChange={(e) => setTitle(e.target.value)}\n//         className=\"chapter-title-input\"\n//       />\n      \n//       <select \n//         value={status} \n//         onChange={(e) => setStatus(e.target.value)}\n//         className=\"status-select\"\n//       >\n//         <option value=\"draft\">Draft</option>\n//         <option value=\"review\">In Review</option>\n//         <option value=\"final\">Final</option>\n//       </select>\n      \n//       <textarea\n//         value={content}\n//         onChange={(e) => setContent(e.target.value)}\n//         className=\"chapter-content-input\"\n//         style={{ height: '200px' }}\n//       />\n      \n//       <div className=\"editor-actions\">\n//         <button onClick={handleSave} className=\"button\">Save</button>\n//         <button onClick={onCancel} className=\"button secondary\">Cancel</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ManuscriptManager;\n\n\nimport React, { useState, useEffect } from 'react';\nimport { geminiService } from '../services/geminiAPI';\n\nconst ManuscriptManager = () => {\n  const [chapters, setChapters] = useState([]);\n  const [activeChapter, setActiveChapter] = useState(null);\n  const [manuscriptTitle, setManuscriptTitle] = useState('Untitled Manuscript');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Load manuscript data from localStorage on component mount\n  useEffect(() => {\n    const savedManuscript = localStorage.getItem('manuscript_data');\n    if (savedManuscript) {\n      const data = JSON.parse(savedManuscript);\n      setChapters(data.chapters || []);\n      setManuscriptTitle(data.title || 'Untitled Manuscript');\n      if (data.chapters.length > 0) {\n        setActiveChapter(data.chapters[0]);\n      }\n    }\n  }, []);\n\n  // Save manuscript data to localStorage whenever it changes\n  useEffect(() => {\n    const manuscriptData = {\n      title: manuscriptTitle,\n      chapters: chapters,\n      lastModified: new Date().toISOString()\n    };\n    localStorage.setItem('manuscript_data', JSON.stringify(manuscriptData));\n  }, [chapters, manuscriptTitle]);\n\n  const addNewChapter = () => {\n    const newChapter = {\n      id: Date.now(),\n      title: `Chapter ${chapters.length + 1}`,\n      content: '',\n      wordCount: 0,\n      progress: 0,\n      notes: '',\n      createdAt: new Date().toISOString(),\n      lastModified: new Date().toISOString()\n    };\n    \n    setChapters([...chapters, newChapter]);\n    setActiveChapter(newChapter);\n  };\n\n  const updateChapter = (chapterId, updates) => {\n    const updatedChapters = chapters.map(chapter => {\n      if (chapter.id === chapterId) {\n        const wordCount = updates.content ? updates.content.split(' ').filter(w => w).length : chapter.wordCount;\n        return {\n          ...chapter,\n          ...updates,\n          wordCount,\n          lastModified: new Date().toISOString()\n        };\n      }\n      return chapter;\n    });\n    \n    setChapters(updatedChapters);\n    if (activeChapter && activeChapter.id === chapterId) {\n      setActiveChapter({ ...activeChapter, ...updates });\n    }\n  };\n\n  const deleteChapter = (chapterId) => {\n    if (window.confirm('Are you sure you want to delete this chapter?')) {\n      const updatedChapters = chapters.filter(chapter => chapter.id !== chapterId);\n      setChapters(updatedChapters);\n      \n      if (activeChapter && activeChapter.id === chapterId) {\n        setActiveChapter(updatedChapters.length > 0 ? updatedChapters[0] : null);\n      }\n    }\n  };\n\n  const exportManuscript = () => {\n    const fullText = chapters\n      .map(chapter => `${chapter.title}\\n\\n${chapter.content}`)\n      .join('\\n\\n---\\n\\n');\n    \n    const blob = new Blob([fullText], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${manuscriptTitle.replace(/[^a-z0-9]/gi, '_').toLowerCase()}.txt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const analyzeChapter = async (chapterId) => {\n    const chapter = chapters.find(c => c.id === chapterId);\n    if (!chapter || !chapter.content.trim()) return;\n\n    setLoading(true);\n    setError('');\n\n    try {\n      const response = await geminiService.analyzeChapter(chapter.content);\n      if (response.success) {\n        updateChapter(chapterId, {\n          analysis: response.analysis,\n          suggestions: response.suggestions\n        });\n      }\n    } catch (error) {\n      setError('Failed to analyze chapter: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getTotalStats = () => {\n    const totalWords = chapters.reduce((sum, chapter) => sum + chapter.wordCount, 0);\n    const avgProgress = chapters.length > 0 \n      ? chapters.reduce((sum, chapter) => sum + chapter.progress, 0) / chapters.length \n      : 0;\n    \n    return {\n      totalWords,\n      totalChapters: chapters.length,\n      avgProgress: Math.round(avgProgress),\n      lastModified: chapters.length > 0 \n        ? new Date(Math.max(...chapters.map(c => new Date(c.lastModified)))).toLocaleDateString()\n        : 'Never'\n    };\n  };\n\n  const stats = getTotalStats();\n\n  return (\n    <div className=\"component manuscript-manager\">\n      <div className=\"manuscript-header\">\n        <div className=\"manuscript-title-section\">\n          <input\n            type=\"text\"\n            value={manuscriptTitle}\n            onChange={(e) => setManuscriptTitle(e.target.value)}\n            className=\"manuscript-title-input\"\n            placeholder=\"Enter manuscript title...\"\n          />\n          <div className=\"manuscript-actions\">\n            <button onClick={exportManuscript} className=\"button secondary small\">\n              📥 Export\n            </button>\n            <button onClick={addNewChapter} className=\"button small\">\n              ➕ New Chapter\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"manuscript-stats\">\n          <div className=\"stat-card\">\n            <span className=\"stat-number\">{stats.totalWords}</span>\n            <span className=\"stat-label\">Total Words</span>\n          </div>\n          <div className=\"stat-card\">\n            <span className=\"stat-number\">{stats.totalChapters}</span>\n            <span className=\"stat-label\">Chapters</span>\n          </div>\n          <div className=\"stat-card\">\n            <span className=\"stat-number\">{stats.avgProgress}%</span>\n            <span className=\"stat-label\">Avg Progress</span>\n          </div>\n          <div className=\"stat-card\">\n            <span className=\"stat-number\">{stats.lastModified}</span>\n            <span className=\"stat-label\">Last Modified</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"manuscript-content\">\n        <div className=\"chapters-sidebar\">\n          <div className=\"sidebar-header\">\n            <h3>📚 Chapters</h3>\n          </div>\n          \n          <ul className=\"chapters-list\">\n            {chapters.map((chapter) => (\n              <li\n                key={chapter.id}\n                className={`chapter-item ${activeChapter?.id === chapter.id ? 'active' : ''}`}\n                onClick={() => setActiveChapter(chapter)}\n              >\n                <div className=\"chapter-info\">\n                  <span className=\"chapter-title\">{chapter.title}</span>\n                  <div className=\"chapter-actions\">\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        analyzeChapter(chapter.id);\n                      }}\n                      className=\"analyze-btn\"\n                      disabled={loading}\n                      title=\"Analyze Chapter\"\n                    >\n                      🔍\n                    </button>\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        deleteChapter(chapter.id);\n                      }}\n                      className=\"delete-btn\"\n                      title=\"Delete Chapter\"\n                    >\n                      🗑️\n                    </button>\n                  </div>\n                </div>\n                <div className=\"chapter-meta\">\n                  {chapter.wordCount} words • {chapter.progress}% complete\n                </div>\n                <div className=\"progress-indicator\">\n                  <div \n                    className=\"progress-fill\" \n                    style={{ width: `${chapter.progress}%` }}\n                  ></div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"editor-area\">\n          {activeChapter ? (\n            <ChapterEditor\n              chapter={activeChapter}\n              onUpdate={updateChapter}\n              loading={loading}\n            />\n          ) : (\n            <div className=\"no-chapter-selected\">\n              <div className=\"empty-state\">\n                <h3>📝 No Chapter Selected</h3>\n                <p>Select a chapter from the sidebar or create a new one to start writing.</p>\n                <button onClick={addNewChapter} className=\"button\">\n                  ➕ Create First Chapter\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {error && <div className=\"error-message\">{error}</div>}\n    </div>\n  );\n};\n\nconst ChapterEditor = ({ chapter, onUpdate, loading }) => {\n  const [content, setContent] = useState(chapter.content);\n  const [title, setTitle] = useState(chapter.title);\n  const [progress, setProgress] = useState(chapter.progress);\n  const [notes, setNotes] = useState(chapter.notes || '');\n  const [showAnalysis, setShowAnalysis] = useState(false);\n\n  useEffect(() => {\n    setContent(chapter.content);\n    setTitle(chapter.title);\n    setProgress(chapter.progress);\n    setNotes(chapter.notes || '');\n  }, [chapter]);\n\n  const handleContentChange = (e) => {\n    const newContent = e.target.value;\n    setContent(newContent);\n    onUpdate(chapter.id, { content: newContent });\n  };\n\n  const handleTitleChange = (e) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n    onUpdate(chapter.id, { title: newTitle });\n  };\n\n  const handleProgressChange = (e) => {\n    const newProgress = parseInt(e.target.value);\n    setProgress(newProgress);\n    onUpdate(chapter.id, { progress: newProgress });\n  };\n\n  const handleNotesChange = (e) => {\n    const newNotes = e.target.value;\n    setNotes(newNotes);\n    onUpdate(chapter.id, { notes: newNotes });\n  };\n\n  const wordCount = content.split(' ').filter(w => w).length;\n\n  return (\n    <div className=\"chapter-editor\">\n      <div className=\"chapter-editor-header\">\n        <div className=\"title-section\">\n          <input\n            type=\"text\"\n            value={title}\n            onChange={handleTitleChange}\n            className=\"chapter-title-input\"\n            placeholder=\"Chapter Title...\"\n          />\n          <div className=\"chapter-stats\">\n            <span className=\"word-count\">{wordCount} words</span>\n            <div className=\"progress-section\">\n              <label>Progress: {progress}%</label>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"100\"\n                value={progress}\n                onChange={handleProgressChange}\n                className=\"progress-slider\"\n              />\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"editor-controls\">\n          <button\n            onClick={() => setShowAnalysis(!showAnalysis)}\n            className={`toggle-btn ${showAnalysis ? 'active' : ''}`}\n          >\n            {showAnalysis ? '📝 Editor' : '📊 Analysis'}\n          </button>\n        </div>\n      </div>\n\n      {!showAnalysis ? (\n        <div className=\"editor-content\">\n          <textarea\n            value={content}\n            onChange={handleContentChange}\n            placeholder=\"Start writing your chapter here...\n\n💡 Writing Tips:\n• Set a daily word count goal\n• Write consistently, even if it's just 100 words\n• Don't edit while writing your first draft\n• Use the progress slider to track completion\n• Add notes below for plot points or character development\"\n            className=\"chapter-textarea\"\n          />\n          \n          <div className=\"notes-section\">\n            <label>📝 Chapter Notes:</label>\n            <textarea\n              value={notes}\n              onChange={handleNotesChange}\n              placeholder=\"Add notes about plot points, character development, or things to remember...\"\n              className=\"notes-textarea\"\n            />\n          </div>\n        </div>\n      ) : (\n        <div className=\"analysis-content\">\n          {chapter.analysis ? (\n            <div className=\"chapter-analysis\">\n              <h4>📊 Chapter Analysis</h4>\n              <div className=\"analysis-results\">\n                <div className=\"analysis-item\">\n                  <strong>Pacing:</strong> {chapter.analysis.pacing}\n                </div>\n                <div className=\"analysis-item\">\n                  <strong>Tone:</strong> {chapter.analysis.tone}\n                </div>\n                <div className=\"analysis-item\">\n                  <strong>Conflict Level:</strong> {chapter.analysis.conflictLevel}\n                </div>\n                <div className=\"analysis-item\">\n                  <strong>Character Development:</strong> {chapter.analysis.characterDevelopment}\n                </div>\n              </div>\n              \n              {chapter.suggestions && (\n                <div className=\"suggestions-section\">\n                  <h4>💡 Suggestions</h4>\n                  <ul>\n                    {chapter.suggestions.map((suggestion, index) => (\n                      <li key={index}>{suggestion}</li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"no-analysis\">\n              <p>No analysis available. Click the analyze button (🔍) in the chapter list to get AI insights.</p>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ManuscriptManager;"],"mappings":";;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}