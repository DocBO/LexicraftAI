{"ast":null,"code":"var _jsxFileName = \"/Users/euclidstellar/Desktop/gun_quill/ai-writing-assistant/src/components/EnhancedParaphraser.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { geminiService } from '../services/geminiAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnhancedParaphraser = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [result, setResult] = useState('');\n  const [mode, setMode] = useState('Literary');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [writingStyle, setWritingStyle] = useState('neutral');\n  const [targetAudience, setTargetAudience] = useState('general');\n  const [preserveDialogue, setPreserveDialogue] = useState(true);\n  const literaryModes = ['Literary', 'Victorian', 'Modern', 'Minimalist', 'Descriptive', 'Dialogue-Heavy', 'Stream-of-Consciousness', 'Gothic', 'Romance', 'Thriller', 'Fantasy', 'Sci-Fi', 'Historical', 'Poetry'];\n  const writingStyles = [{\n    value: 'hemingway',\n    label: 'Hemingway (Concise)'\n  }, {\n    value: 'dickens',\n    label: 'Dickens (Elaborate)'\n  }, {\n    value: 'rowling',\n    label: 'Rowling (Accessible)'\n  }, {\n    value: 'tolkien',\n    label: 'Tolkien (Epic)'\n  }, {\n    value: 'austen',\n    label: 'Austen (Witty)'\n  }, {\n    value: 'king',\n    label: 'Stephen King (Suspenseful)'\n  }];\n  const handleAdvancedParaphrase = async () => {\n    if (!text.trim()) return;\n    setLoading(true);\n    setError('');\n    try {\n      const response = await geminiService.advancedParaphrase(text, {\n        mode,\n        writingStyle,\n        targetAudience,\n        preserveDialogue\n      });\n      if (response.success) {\n        setResult(response.result);\n      }\n    } catch (error) {\n      setError('Failed to paraphrase: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component enhanced-paraphraser\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFA8 Literary Paraphraser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"advanced-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mode-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Literary Style:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: mode,\n            onChange: e => setMode(e.target.value),\n            className: \"mode-select\",\n            children: literaryModes.map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: m,\n              children: m\n            }, m, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"style-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Author Style:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: writingStyle,\n            onChange: e => setWritingStyle(e.target.value),\n            className: \"mode-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"neutral\",\n              children: \"Neutral\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), writingStyles.map(style => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: style.value,\n              children: style.label\n            }, style.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audience-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Target Audience:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: targetAudience,\n            onChange: e => setTargetAudience(e.target.value),\n            className: \"mode-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"general\",\n              children: \"General Adult\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ya\",\n              children: \"Young Adult\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"literary\",\n              children: \"Literary Fiction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"commercial\",\n              children: \"Commercial Fiction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"academic\",\n              children: \"Academic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preserve-options\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: preserveDialogue,\n              onChange: e => setPreserveDialogue(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), \"Preserve Dialogue Structure\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      placeholder: \"Enter your prose to enhance with literary style...\",\n      className: \"text-area literary-textarea\",\n      style: {\n        height: '300px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdvancedParaphrase,\n      disabled: loading || !text.trim(),\n      className: \"button literary-button\",\n      children: loading ? 'Enhancing...' : 'Transform Text'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results enhanced-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enhanced Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-text\",\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setText(result),\n          className: \"button secondary\",\n          children: \"Use as New Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigator.clipboard.writeText(result),\n          className: \"button secondary\",\n          children: \"Copy Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(EnhancedParaphraser, \"APeJ7phwrp5zBJ/YU5g2P84wX4w=\");\n_c = EnhancedParaphraser;\nexport default EnhancedParaphraser;\nvar _c;\n$RefreshReg$(_c, \"EnhancedParaphraser\");","map":{"version":3,"names":["React","useState","geminiService","jsxDEV","_jsxDEV","EnhancedParaphraser","_s","text","setText","result","setResult","mode","setMode","loading","setLoading","error","setError","writingStyle","setWritingStyle","targetAudience","setTargetAudience","preserveDialogue","setPreserveDialogue","literaryModes","writingStyles","value","label","handleAdvancedParaphrase","trim","response","advancedParaphrase","success","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","map","m","style","type","checked","placeholder","height","onClick","disabled","navigator","clipboard","writeText","_c","$RefreshReg$"],"sources":["/Users/euclidstellar/Desktop/gun_quill/ai-writing-assistant/src/components/EnhancedParaphraser.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { geminiService } from '../services/geminiAPI';\n\nconst EnhancedParaphraser = () => {\n  const [text, setText] = useState('');\n  const [result, setResult] = useState('');\n  const [mode, setMode] = useState('Literary');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [writingStyle, setWritingStyle] = useState('neutral');\n  const [targetAudience, setTargetAudience] = useState('general');\n  const [preserveDialogue, setPreserveDialogue] = useState(true);\n\n  const literaryModes = [\n    'Literary', 'Victorian', 'Modern', 'Minimalist', 'Descriptive', \n    'Dialogue-Heavy', 'Stream-of-Consciousness', 'Gothic', 'Romance', \n    'Thriller', 'Fantasy', 'Sci-Fi', 'Historical', 'Poetry'\n  ];\n\n  const writingStyles = [\n    { value: 'hemingway', label: 'Hemingway (Concise)' },\n    { value: 'dickens', label: 'Dickens (Elaborate)' },\n    { value: 'rowling', label: 'Rowling (Accessible)' },\n    { value: 'tolkien', label: 'Tolkien (Epic)' },\n    { value: 'austen', label: 'Austen (Witty)' },\n    { value: 'king', label: 'Stephen King (Suspenseful)' }\n  ];\n\n  const handleAdvancedParaphrase = async () => {\n    if (!text.trim()) return;\n    \n    setLoading(true);\n    setError('');\n    \n    try {\n      const response = await geminiService.advancedParaphrase(text, {\n        mode,\n        writingStyle,\n        targetAudience,\n        preserveDialogue\n      });\n      if (response.success) {\n        setResult(response.result);\n      }\n    } catch (error) {\n      setError('Failed to paraphrase: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"component enhanced-paraphraser\">\n      <h2>🎨 Literary Paraphraser</h2>\n      \n      <div className=\"advanced-controls\">\n        <div className=\"control-row\">\n          <div className=\"mode-selector\">\n            <label>Literary Style:</label>\n            <select \n              value={mode} \n              onChange={(e) => setMode(e.target.value)}\n              className=\"mode-select\"\n            >\n              {literaryModes.map(m => (\n                <option key={m} value={m}>{m}</option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"style-selector\">\n            <label>Author Style:</label>\n            <select \n              value={writingStyle} \n              onChange={(e) => setWritingStyle(e.target.value)}\n              className=\"mode-select\"\n            >\n              <option value=\"neutral\">Neutral</option>\n              {writingStyles.map(style => (\n                <option key={style.value} value={style.value}>\n                  {style.label}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"control-row\">\n          <div className=\"audience-selector\">\n            <label>Target Audience:</label>\n            <select \n              value={targetAudience} \n              onChange={(e) => setTargetAudience(e.target.value)}\n              className=\"mode-select\"\n            >\n              <option value=\"general\">General Adult</option>\n              <option value=\"ya\">Young Adult</option>\n              <option value=\"literary\">Literary Fiction</option>\n              <option value=\"commercial\">Commercial Fiction</option>\n              <option value=\"academic\">Academic</option>\n            </select>\n          </div>\n\n          <div className=\"preserve-options\">\n            <label className=\"checkbox-label\">\n              <input\n                type=\"checkbox\"\n                checked={preserveDialogue}\n                onChange={(e) => setPreserveDialogue(e.target.checked)}\n              />\n              Preserve Dialogue Structure\n            </label>\n          </div>\n        </div>\n      </div>\n\n      <textarea\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        placeholder=\"Enter your prose to enhance with literary style...\"\n        className=\"text-area literary-textarea\"\n        style={{ height: '300px' }}\n      />\n\n      <button \n        onClick={handleAdvancedParaphrase}\n        disabled={loading || !text.trim()}\n        className=\"button literary-button\"\n      >\n        {loading ? 'Enhancing...' : 'Transform Text'}\n      </button>\n\n      {error && <div className=\"error-message\">{error}</div>}\n\n      {result && (\n        <div className=\"results enhanced-results\">\n          <h3>Enhanced Text:</h3>\n          <div className=\"result-text\">{result}</div>\n          \n          <div className=\"result-actions\">\n            <button \n              onClick={() => setText(result)}\n              className=\"button secondary\"\n            >\n              Use as New Input\n            </button>\n            <button \n              onClick={() => navigator.clipboard.writeText(result)}\n              className=\"button secondary\"\n            >\n              Copy Result\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EnhancedParaphraser;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}